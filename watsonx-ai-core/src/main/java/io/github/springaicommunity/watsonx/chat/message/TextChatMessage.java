/*
 * Copyright 2025 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.github.springaicommunity.watsonx.chat.message;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.github.springaicommunity.watsonx.chat.util.ChatRole;
import io.github.springaicommunity.watsonx.chat.util.ToolType;
import java.util.List;

/** Base class for chat messages in a conversation for watsonx.ai. */
@JsonInclude(JsonInclude.Include.NON_NULL)
public record TextChatMessage(
    @JsonProperty("role") ChatRole role,
    @JsonProperty("content") String content,
    @JsonProperty("name") String name,
    @JsonProperty("content") Object textChatUserContent,
    @JsonProperty("refusal") String refusal,
    @JsonProperty("tool_calls") List<TextChatToolCall> toolCalls,
    @JsonProperty("tool_call_id") String toolCallId) {

  /**
   * Constructor for an assistant message.
   *
   * @param content The content of the message.
   * @param name An optional name for the participant. Provides the model information to
   *     differentiate between participants of the same role.
   * @param refusal An optional refusal message by the assistant.
   * @param toolCalls The tool calls generated by the model, such as function calls.
   */
  public TextChatMessage(
      final String content,
      final String name,
      final String refusal,
      final List<TextChatToolCall> toolCalls) {
    this(ChatRole.ASSISTANT, content, name, null, refusal, toolCalls, null);
  }

  /**
   * Constructor for an assistant message.
   *
   * @param content The content of the message.
   * @param name An optional name for the participant. Provides the model information to
   *     differentiate between participants of the same role.
   */
  public TextChatMessage(final String content, final String name) {
    this(ChatRole.SYSTEM, content, name, null, null, null, null);
  }

  /**
   * Constructor for a tool message.
   *
   * @param content The content of the message.
   * @param name An optional name for the participant. Provides the model information to
   *     differentiate between participants of the same role.
   * @param toolCallId The tool call ID associated with this message.
   */
  public TextChatMessage(final String content, final String name, final String toolCallId) {
    this(ChatRole.TOOL, content, name, null, null, null, toolCallId);
  }

  /**
   * Constructor for a system message.
   *
   * @param content A list of user content for the message.
   * @param name An optional name for the participant. Provides the model information to
   *     differentiate between participants of the same role.
   */
  public TextChatMessage(final Object content, final String name) {
    this(ChatRole.USER, null, name, content, null, null, null);
  }

  @JsonInclude(JsonInclude.Include.NON_NULL)
  public record TextChatToolCall(
      @JsonProperty("id") String id,
      @JsonProperty("type") ToolType type,
      @JsonProperty("function") TextChatFunctionCall function) {}

  @JsonInclude(JsonInclude.Include.NON_NULL)
  public record TextChatFunctionCall(
      @JsonProperty("name") String name, @JsonProperty("arguments") String arguments) {}
}
