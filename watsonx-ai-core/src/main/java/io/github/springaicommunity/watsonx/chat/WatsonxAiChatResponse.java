/*
 * Copyright 2025 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.github.springaicommunity.watsonx.chat;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Map;

/**
 * Response from the Watsonx AI Chat API. Full documentation can be found at <a
 * href=https://cloud.ibm.com/apidocs/watsonx-ai#text-chat-response>watsonx.ai Chat Response</a>.
 *
 * @author Tristan Mahinay
 * @since 1.1.0-SNAPSHOT
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
public record WatsonxAiChatResponse(
    @JsonProperty("id") String id,
    @JsonProperty("model_id") String modelId,
    @JsonProperty("created") Integer created,
    @JsonProperty("choices") List<TextChatResultChoice> choices,
    @JsonProperty("model_version") String modelVersion,
    @JsonProperty("created_at") LocalDateTime createdAt,
    @JsonProperty("usage") TextChatUsage usage,
    @JsonProperty("system") SystemDetails system) {

  /** A list of chat completion choices. Can be more than one. */
  @JsonInclude(JsonInclude.Include.NON_NULL)
  record TextChatResultChoice(
      @JsonProperty("index") Integer index,
      @JsonProperty("message") TextChatResultMessage message,
      @JsonProperty("finish_reason") String finishReason) {}

  /** A message in a chat completion response. */
  @JsonInclude(JsonInclude.Include.NON_NULL)
  record TextChatResultMessage(
      @JsonProperty("role") Role role,
      @JsonProperty("content") String content,
      @JsonProperty("refusal") String refusal) {}

  /** The tool calls generated by the model, such as function calls. */
  @JsonInclude(JsonInclude.Include.NON_NULL)
  record TextChatToolCall(
      @JsonProperty("id") String id,
      @JsonProperty("type") ToolType type,
      @JsonProperty("function") TextChatFunctionCall function) {}

  /** The function call. */
  @JsonInclude(JsonInclude.Include.NON_NULL)
  record TextChatFunctionCall(
      @JsonProperty("name") String name, @JsonProperty("arguments") String arguments) {}

  /** Usage statistics for the completion request. */
  @JsonInclude(JsonInclude.Include.NON_NULL)
  record TextChatUsage(
      @JsonProperty("prompt_tokens") Integer promptTokens,
      @JsonProperty("completion_tokens") Integer completionTokens,
      @JsonProperty("total_tokens") Integer totalTokens) {}

  /**
   * Optional details coming from the service and related to the API call or the associated
   * resource.
   */
  @JsonInclude(JsonInclude.Include.NON_NULL)
  record SystemDetails(@JsonProperty("warnings") List<Warning> warnings) {}

  /** Any warnings coming from the system. */
  @JsonInclude(JsonInclude.Include.NON_NULL)
  record Warning(
      @JsonProperty("message") String message,
      @JsonProperty("id") String id,
      @JsonProperty("more_info") String moreInfo,
      @JsonProperty("additional_properties") Map<String, Object> additionalProperties) {}
}
